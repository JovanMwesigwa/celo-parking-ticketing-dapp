{
  "address": "0x8dfdE617A834C373B0aCD203533e871fDcc97b4c",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Ledger__NotEnoughFundsPaid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ledger__NotPermitted",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "carPlate",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "NewTicketIssued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "ticketNumber",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "carPlate",
          "type": "string"
        }
      ],
      "name": "TicketPaid",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "enteredLocation",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "carPlate",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "tixPrice",
          "type": "uint256"
        }
      ],
      "name": "createTicket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdminAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllTickets",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "ticketNumber",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "location",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "carNumberPlate",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "issuedAt",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isPaid",
              "type": "bool"
            }
          ],
          "internalType": "struct Ledger.Ticket[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ticketNo",
          "type": "uint256"
        }
      ],
      "name": "getTicketInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "ticketNumber",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "location",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "carNumberPlate",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "issuedAt",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isPaid",
              "type": "bool"
            }
          ],
          "internalType": "struct Ledger.Ticket",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "carPlate",
          "type": "string"
        }
      ],
      "name": "getVehiclePaidTickets",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "ticketNumber",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "location",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "carNumberPlate",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "issuedAt",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isPaid",
              "type": "bool"
            }
          ],
          "internalType": "struct Ledger.Ticket[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "carPlate",
          "type": "string"
        }
      ],
      "name": "getVehicleTickets",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "ticketNumber",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "location",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "carNumberPlate",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "issuedAt",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isPaid",
              "type": "bool"
            }
          ],
          "internalType": "struct Ledger.Ticket[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "carPlate",
          "type": "string"
        }
      ],
      "name": "getVehicleUnPaidTickets",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "ticketNumber",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "location",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "carNumberPlate",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "issuedAt",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isPaid",
              "type": "bool"
            }
          ],
          "internalType": "struct Ledger.Ticket[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "carPlate",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "ticketNo",
          "type": "uint256"
        }
      ],
      "name": "payTicket",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x7aadfa5779e4ab6cdf7fd442c51c69e9c04e53663c5d631802a9d0b1e94c7169",
  "receipt": {
    "to": null,
    "from": "0x5CBDf5f9E468dF3888e04155668CcAfC6F6C4dcf",
    "contractAddress": "0x8dfdE617A834C373B0aCD203533e871fDcc97b4c",
    "transactionIndex": 1,
    "gasUsed": "1761706",
    "logsBloom": "0x
    "blockHash": "0xa52ba1a1835625841d91359e93b8e90911dc487d9bb79f7497b31cc63db6464b",
    "transactionHash": "0x7aadfa5779e4ab6cdf7fd442c51c69e9c04e53663c5d631802a9d0b1e94c7169",
    "logs": [],
    "blockNumber": 15912229,
    "cumulativeGasUsed": "1941117",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 7,
  "solcInputHash": "7866957581cf327d60e4220926d443c4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Ledger__NotEnoughFundsPaid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ledger__NotPermitted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"carPlate\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"NewTicketIssued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"ticketNumber\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"carPlate\",\"type\":\"string\"}],\"name\":\"TicketPaid\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"enteredLocation\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"carPlate\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"tixPrice\",\"type\":\"uint256\"}],\"name\":\"createTicket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdminAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllTickets\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ticketNumber\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"carNumberPlate\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issuedAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPaid\",\"type\":\"bool\"}],\"internalType\":\"struct Ledger.Ticket[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ticketNo\",\"type\":\"uint256\"}],\"name\":\"getTicketInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ticketNumber\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"carNumberPlate\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issuedAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPaid\",\"type\":\"bool\"}],\"internalType\":\"struct Ledger.Ticket\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"carPlate\",\"type\":\"string\"}],\"name\":\"getVehiclePaidTickets\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ticketNumber\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"carNumberPlate\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issuedAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPaid\",\"type\":\"bool\"}],\"internalType\":\"struct Ledger.Ticket[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"carPlate\",\"type\":\"string\"}],\"name\":\"getVehicleTickets\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ticketNumber\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"carNumberPlate\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issuedAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPaid\",\"type\":\"bool\"}],\"internalType\":\"struct Ledger.Ticket[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"carPlate\",\"type\":\"string\"}],\"name\":\"getVehicleUnPaidTickets\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ticketNumber\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"carNumberPlate\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issuedAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPaid\",\"type\":\"bool\"}],\"internalType\":\"struct Ledger.Ticket[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"carPlate\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"ticketNo\",\"type\":\"uint256\"}],\"name\":\"payTicket\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ledger.sol\":\"Ledger\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ledger.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\n// 1. We need an admin address to issue a new ticket\\r\\n// 2. Ticket object should have - {\\r\\n//     price,\\r\\n//     date created,\\r\\n//     car number plate,\\r\\n//     is paid -- (bool)\\r\\n// }\\r\\n// 3. Anyone can pay for the ticket on the owner's behalf\\r\\n\\r\\n// NB: The car's license plate is very important because we may need to query\\r\\n//     its details or loop through and filter between paid and unpaid tickets (using the license plates)\\r\\n\\r\\nerror Ledger__NotPermitted();\\r\\nerror Ledger__NotEnoughFundsPaid();\\r\\n\\r\\ncontract Ledger {\\r\\n    // Set the admin default address\\r\\n    address private immutable i_admin;\\r\\n    uint256 private s_ticketCount;\\r\\n    uint256 private s_ledgerBalance;\\r\\n\\r\\n    // Create the ticket issuing object\\r\\n    struct Ticket {\\r\\n        uint256 ticketNumber;\\r\\n        string location;\\r\\n        string carNumberPlate;\\r\\n        uint256 price;\\r\\n        uint256 issuedAt;\\r\\n        bool isPaid;\\r\\n    }\\r\\n\\r\\n    // All Tickets array\\r\\n    Ticket[] private s_tickets;\\r\\n\\r\\n    mapping(string => Ticket[]) private s_vehicleTickets;\\r\\n    mapping(string => Ticket[]) private s_vehicleUpaidTickets;\\r\\n    mapping(string => Ticket[]) private s_vehiclePaidTickets;\\r\\n\\r\\n    // Events\\r\\n    event NewTicketIssued(string indexed carPlate, string indexed location);\\r\\n    event TicketPaid(uint256 indexed ticketNumber, string indexed carPlate);\\r\\n\\r\\n    // Constructor\\r\\n    constructor() {\\r\\n        i_admin = msg.sender;\\r\\n        s_ticketCount = 0;\\r\\n        s_ledgerBalance = 0;\\r\\n    }\\r\\n\\r\\n    function createTicket(\\r\\n        string memory enteredLocation,\\r\\n        string memory carPlate,\\r\\n        uint256 tixPrice\\r\\n    ) public {\\r\\n        if (msg.sender != i_admin) {\\r\\n            revert Ledger__NotPermitted();\\r\\n        }\\r\\n\\r\\n        // Create a new Ticket obj\\r\\n        s_tickets.push(\\r\\n            Ticket(\\r\\n                s_ticketCount,\\r\\n                enteredLocation,\\r\\n                carPlate,\\r\\n                tixPrice,\\r\\n                block.timestamp,\\r\\n                false\\r\\n            )\\r\\n        );\\r\\n\\r\\n        s_vehicleTickets[carPlate].push(\\r\\n            Ticket(\\r\\n                s_ticketCount,\\r\\n                enteredLocation,\\r\\n                carPlate,\\r\\n                tixPrice,\\r\\n                block.timestamp,\\r\\n                false\\r\\n            )\\r\\n        );\\r\\n\\r\\n        s_vehicleUpaidTickets[carPlate].push(\\r\\n            Ticket(\\r\\n                s_ticketCount,\\r\\n                enteredLocation,\\r\\n                carPlate,\\r\\n                tixPrice,\\r\\n                block.timestamp,\\r\\n                false\\r\\n            )\\r\\n        );\\r\\n\\r\\n        s_ticketCount += 1;\\r\\n\\r\\n        // add the vehicle to the s_vehicleTicket mapping\\r\\n        emit NewTicketIssued(carPlate, enteredLocation);\\r\\n    }\\r\\n\\r\\n    function payTicket(\\r\\n        string memory carPlate,\\r\\n        uint256 ticketNo\\r\\n    ) public payable {\\r\\n        // Get the required ticket\\r\\n        Ticket memory vehicleTicket = s_vehicleTickets[carPlate][ticketNo];\\r\\n        uint256 tixPrice = vehicleTicket.price;\\r\\n\\r\\n        // Verify to see that they'repaying the right ticket amount\\r\\n        if (msg.value < tixPrice) {\\r\\n            revert Ledger__NotEnoughFundsPaid();\\r\\n        }\\r\\n\\r\\n        // Update the contract balances\\r\\n        s_ledgerBalance += msg.value;\\r\\n\\r\\n        // Change the in memory vehicleTicket is Paid to true\\r\\n        vehicleTicket.isPaid = true;\\r\\n\\r\\n        // Change the isPaid status to true in the all s_tickets array\\r\\n        Ticket memory fromAllTix = s_tickets[ticketNo];\\r\\n        fromAllTix.isPaid = true;\\r\\n\\r\\n        // Change in the vehicleTicket isPaid to true\\r\\n        s_vehicleTickets[carPlate][ticketNo].isPaid = true;\\r\\n\\r\\n        // Clear / Remove the ticket from the vehicle's unpaid tickets\\r\\n        delete s_vehicleUpaidTickets[carPlate][ticketNo];\\r\\n\\r\\n        // Add it to the paid tickets array;\\r\\n        s_vehiclePaidTickets[carPlate].push(vehicleTicket);\\r\\n\\r\\n        // Emit event to show a new ticket paid..\\r\\n        emit TicketPaid(ticketNo, carPlate);\\r\\n    }\\r\\n\\r\\n    // View functions\\r\\n    function getAdminAddress() public view returns (address) {\\r\\n        return i_admin;\\r\\n    }\\r\\n\\r\\n    // get all tickets obj\\r\\n    function getAllTickets() public view returns (Ticket[] memory) {\\r\\n        return s_tickets;\\r\\n    }\\r\\n\\r\\n    function getTicketInfo(\\r\\n        uint256 ticketNo\\r\\n    ) public view returns (Ticket memory) {\\r\\n        // return s_vehicleUpaidTickets[carPlate][ticketNo];\\r\\n        return s_tickets[ticketNo];\\r\\n    }\\r\\n\\r\\n    // Get vehicle tickets\\r\\n    function getVehicleTickets(\\r\\n        string memory carPlate\\r\\n    ) public view returns (Ticket[] memory) {\\r\\n        return s_vehicleTickets[carPlate];\\r\\n    }\\r\\n\\r\\n    function getVehicleUnPaidTickets(\\r\\n        string memory carPlate\\r\\n    ) public view returns (Ticket[] memory) {\\r\\n        return s_vehicleUpaidTickets[carPlate];\\r\\n    }\\r\\n\\r\\n    function getVehiclePaidTickets(\\r\\n        string memory carPlate\\r\\n    ) public view returns (Ticket[] memory) {\\r\\n        return s_vehiclePaidTickets[carPlate];\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x1ea61a1e3ad917bb342595dc5bd5be10820c700d84b8e863ce54c1ecba34a222\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050600080819055506000600181905550608051611ee9610076600039600081816103cd01526110ac0152611ee96000f3fe60806040526004361061007b5760003560e01c80637d71c9e71161004e5780637d71c9e71461012d578063b2e6b9121461016a578063cdf8254b14610195578063ff99a063146101d25761007b565b806303e96fe3146100805780631af4d702146100ab5780634fd77ff3146100d45780635153e8dd146100f0575b600080fd5b34801561008c57600080fd5b5061009561020f565b6040516100a291906116ee565b60405180910390f35b3480156100b757600080fd5b506100d260048036038101906100cd9190611885565b6103cb565b005b6100ee60048036038101906100e99190611910565b610759565b005b3480156100fc57600080fd5b506101176004803603810190610112919061196c565b610cf4565b60405161012491906116ee565b60405180910390f35b34801561013957600080fd5b50610154600480360381019061014f919061196c565b610ece565b60405161016191906116ee565b60405180910390f35b34801561017657600080fd5b5061017f6110a8565b60405161018c91906119f6565b60405180910390f35b3480156101a157600080fd5b506101bc60048036038101906101b7919061196c565b6110d0565b6040516101c991906116ee565b60405180910390f35b3480156101de57600080fd5b506101f960048036038101906101f49190611a11565b6112aa565b6040516102069190611ace565b60405180910390f35b60606002805480602002602001604051908101604052809291908181526020016000905b828210156103c257838290600052602060002090600602016040518060c00160405290816000820154815260200160018201805461027090611b1f565b80601f016020809104026020016040519081016040528092919081815260200182805461029c90611b1f565b80156102e95780601f106102be576101008083540402835291602001916102e9565b820191906000526020600020905b8154815290600101906020018083116102cc57829003601f168201915b5050505050815260200160028201805461030290611b1f565b80601f016020809104026020016040519081016040528092919081815260200182805461032e90611b1f565b801561037b5780601f106103505761010080835404028352916020019161037b565b820191906000526020600020905b81548152906001019060200180831161035e57829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff16151515158152505081526020019060010190610233565b50505050905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610450576040517fdaf2766300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026040518060c0016040528060005481526020018581526020018481526020018381526020014281526020016000151581525090806001815401808255809150506001900390600052602060002090600602016000909190919091506000820151816000015560208201518160010190816104cc9190611cfc565b5060408201518160020190816104e29190611cfc565b50606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555050506003826040516105299190611e0a565b90815260200160405180910390206040518060c0016040528060005481526020018581526020018481526020018381526020014281526020016000151581525090806001815401808255809150506001900390600052602060002090600602016000909190919091506000820151816000015560208201518160010190816105b19190611cfc565b5060408201518160020190816105c79190611cfc565b50606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff021916908315150217905550505060048260405161060e9190611e0a565b90815260200160405180910390206040518060c0016040528060005481526020018581526020018481526020018381526020014281526020016000151581525090806001815401808255809150506001900390600052602060002090600602016000909190919091506000820151816000015560208201518160010190816106969190611cfc565b5060408201518160020190816106ac9190611cfc565b50606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff021916908315150217905550505060016000808282546106f59190611e50565b925050819055508260405161070a9190611e0a565b6040518091039020826040516107209190611e0a565b60405180910390207f2eb5a5afbe330c720b569c62a4c06cc1d9562eeadf2d5ffa3af175408e69b91460405160405180910390a3505050565b600060038360405161076b9190611e0a565b9081526020016040518091039020828154811061078b5761078a611e84565b5b90600052602060002090600602016040518060c0016040529081600082015481526020016001820180546107be90611b1f565b80601f01602080910402602001604051908101604052809291908181526020018280546107ea90611b1f565b80156108375780601f1061080c57610100808354040283529160200191610837565b820191906000526020600020905b81548152906001019060200180831161081a57829003601f168201915b5050505050815260200160028201805461085090611b1f565b80601f016020809104026020016040519081016040528092919081815260200182805461087c90611b1f565b80156108c95780601f1061089e576101008083540402835291602001916108c9565b820191906000526020600020905b8154815290600101906020018083116108ac57829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff161515151581525050905060008160600151905080341015610946576040517fcdcdc2a800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b34600160008282546109589190611e50565b9250508190555060018260a001901515908115158152505060006002848154811061098657610985611e84565b5b90600052602060002090600602016040518060c0016040529081600082015481526020016001820180546109b990611b1f565b80601f01602080910402602001604051908101604052809291908181526020018280546109e590611b1f565b8015610a325780601f10610a0757610100808354040283529160200191610a32565b820191906000526020600020905b815481529060010190602001808311610a1557829003601f168201915b50505050508152602001600282018054610a4b90611b1f565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7790611b1f565b8015610ac45780601f10610a9957610100808354040283529160200191610ac4565b820191906000526020600020905b815481529060010190602001808311610aa757829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff161515151581525050905060018160a00190151590811515815250506001600386604051610b219190611e0a565b90815260200160405180910390208581548110610b4157610b40611e84565b5b906000526020600020906006020160050160006101000a81548160ff021916908315150217905550600485604051610b799190611e0a565b90815260200160405180910390208481548110610b9957610b98611e84565b5b9060005260206000209060060201600080820160009055600182016000610bc09190611443565b600282016000610bd09190611443565b600382016000905560048201600090556005820160006101000a81549060ff02191690555050600585604051610c069190611e0a565b9081526020016040518091039020839080600181540180825580915050600190039060005260206000209060060201600090919091909150600082015181600001556020820151816001019081610c5d9190611cfc565b506040820151816002019081610c739190611cfc565b50606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff021916908315150217905550505084604051610cb89190611e0a565b6040518091039020847fe28e2edd34dc43f8e5cfe399e8462a1057a879b384d9195699ff890334ae08ec60405160405180910390a35050505050565b6060600482604051610d069190611e0a565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b82821015610ec357838290600052602060002090600602016040518060c001604052908160008201548152602001600182018054610d7190611b1f565b80601f0160208091040260200160405190810160405280929190818152602001828054610d9d90611b1f565b8015610dea5780601f10610dbf57610100808354040283529160200191610dea565b820191906000526020600020905b815481529060010190602001808311610dcd57829003601f168201915b50505050508152602001600282018054610e0390611b1f565b80601f0160208091040260200160405190810160405280929190818152602001828054610e2f90611b1f565b8015610e7c5780601f10610e5157610100808354040283529160200191610e7c565b820191906000526020600020905b815481529060010190602001808311610e5f57829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff16151515158152505081526020019060010190610d34565b505050509050919050565b6060600382604051610ee09190611e0a565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b8282101561109d57838290600052602060002090600602016040518060c001604052908160008201548152602001600182018054610f4b90611b1f565b80601f0160208091040260200160405190810160405280929190818152602001828054610f7790611b1f565b8015610fc45780601f10610f9957610100808354040283529160200191610fc4565b820191906000526020600020905b815481529060010190602001808311610fa757829003601f168201915b50505050508152602001600282018054610fdd90611b1f565b80601f016020809104026020016040519081016040528092919081815260200182805461100990611b1f565b80156110565780601f1061102b57610100808354040283529160200191611056565b820191906000526020600020905b81548152906001019060200180831161103957829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff16151515158152505081526020019060010190610f0e565b505050509050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60606005826040516110e29190611e0a565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b8282101561129f57838290600052602060002090600602016040518060c00160405290816000820154815260200160018201805461114d90611b1f565b80601f016020809104026020016040519081016040528092919081815260200182805461117990611b1f565b80156111c65780601f1061119b576101008083540402835291602001916111c6565b820191906000526020600020905b8154815290600101906020018083116111a957829003601f168201915b505050505081526020016002820180546111df90611b1f565b80601f016020809104026020016040519081016040528092919081815260200182805461120b90611b1f565b80156112585780601f1061122d57610100808354040283529160200191611258565b820191906000526020600020905b81548152906001019060200180831161123b57829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff16151515158152505081526020019060010190611110565b505050509050919050565b6112b2611483565b600282815481106112c6576112c5611e84565b5b90600052602060002090600602016040518060c0016040529081600082015481526020016001820180546112f990611b1f565b80601f016020809104026020016040519081016040528092919081815260200182805461132590611b1f565b80156113725780601f1061134757610100808354040283529160200191611372565b820191906000526020600020905b81548152906001019060200180831161135557829003601f168201915b5050505050815260200160028201805461138b90611b1f565b80601f01602080910402602001604051908101604052809291908181526020018280546113b790611b1f565b80156114045780601f106113d957610100808354040283529160200191611404565b820191906000526020600020905b8154815290600101906020018083116113e757829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1615151515815250509050919050565b50805461144f90611b1f565b6000825580601f106114615750611480565b601f01602090049060005260206000209081019061147f91906114bb565b5b50565b6040518060c0016040528060008152602001606081526020016060815260200160008152602001600081526020016000151581525090565b5b808211156114d45760008160009055506001016114bc565b5090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b61151781611504565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561155757808201518184015260208101905061153c565b60008484015250505050565b6000601f19601f8301169050919050565b600061157f8261151d565b6115898185611528565b9350611599818560208601611539565b6115a281611563565b840191505092915050565b60008115159050919050565b6115c2816115ad565b82525050565b600060c0830160008301516115e0600086018261150e565b50602083015184820360208601526115f88282611574565b915050604083015184820360408601526116128282611574565b9150506060830151611627606086018261150e565b50608083015161163a608086018261150e565b5060a083015161164d60a08601826115b9565b508091505092915050565b600061166483836115c8565b905092915050565b6000602082019050919050565b6000611684826114d8565b61168e81856114e3565b9350836020820285016116a0856114f4565b8060005b858110156116dc57848403895281516116bd8582611658565b94506116c88361166c565b925060208a019950506001810190506116a4565b50829750879550505050505092915050565b600060208201905081810360008301526117088184611679565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61176682611563565b810181811067ffffffffffffffff821117156117855761178461172e565b5b80604052505050565b6000611798611710565b90506117a4828261175d565b919050565b600067ffffffffffffffff8211156117c4576117c361172e565b5b6117cd82611563565b9050602081019050919050565b82818337600083830152505050565b60006117fc6117f7846117a9565b61178e565b90508281526020810184848401111561181857611817611729565b5b6118238482856117da565b509392505050565b600082601f8301126118405761183f611724565b5b81356118508482602086016117e9565b91505092915050565b61186281611504565b811461186d57600080fd5b50565b60008135905061187f81611859565b92915050565b60008060006060848603121561189e5761189d61171a565b5b600084013567ffffffffffffffff8111156118bc576118bb61171f565b5b6118c88682870161182b565b935050602084013567ffffffffffffffff8111156118e9576118e861171f565b5b6118f58682870161182b565b925050604061190686828701611870565b9150509250925092565b600080604083850312156119275761192661171a565b5b600083013567ffffffffffffffff8111156119455761194461171f565b5b6119518582860161182b565b925050602061196285828601611870565b9150509250929050565b6000602082840312156119825761198161171a565b5b600082013567ffffffffffffffff8111156119a05761199f61171f565b5b6119ac8482850161182b565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119e0826119b5565b9050919050565b6119f0816119d5565b82525050565b6000602082019050611a0b60008301846119e7565b92915050565b600060208284031215611a2757611a2661171a565b5b6000611a3584828501611870565b91505092915050565b600060c083016000830151611a56600086018261150e565b5060208301518482036020860152611a6e8282611574565b91505060408301518482036040860152611a888282611574565b9150506060830151611a9d606086018261150e565b506080830151611ab0608086018261150e565b5060a0830151611ac360a08601826115b9565b508091505092915050565b60006020820190508181036000830152611ae88184611a3e565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611b3757607f821691505b602082108103611b4a57611b49611af0565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611bb27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611b75565b611bbc8683611b75565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611bf9611bf4611bef84611504565b611bd4565b611504565b9050919050565b6000819050919050565b611c1383611bde565b611c27611c1f82611c00565b848454611b82565b825550505050565b600090565b611c3c611c2f565b611c47818484611c0a565b505050565b5b81811015611c6b57611c60600082611c34565b600181019050611c4d565b5050565b601f821115611cb057611c8181611b50565b611c8a84611b65565b81016020851015611c99578190505b611cad611ca585611b65565b830182611c4c565b50505b505050565b600082821c905092915050565b6000611cd360001984600802611cb5565b1980831691505092915050565b6000611cec8383611cc2565b9150826002028217905092915050565b611d058261151d565b67ffffffffffffffff811115611d1e57611d1d61172e565b5b611d288254611b1f565b611d33828285611c6f565b600060209050601f831160018114611d665760008415611d54578287015190505b611d5e8582611ce0565b865550611dc6565b601f198416611d7486611b50565b60005b82811015611d9c57848901518255600182019150602085019450602081019050611d77565b86831015611db95784890151611db5601f891682611cc2565b8355505b6001600288020188555050505b505050505050565b600081905092915050565b6000611de48261151d565b611dee8185611dce565b9350611dfe818560208601611539565b80840191505092915050565b6000611e168284611dd9565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e5b82611504565b9150611e6683611504565b9250828201905080821115611e7e57611e7d611e21565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea264697066735822122036f7f3a590aaa8a47ad6ddd603e8cf62e268d96721a29b48fee04c340faddb4064736f6c63430008110033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80637d71c9e71161004e5780637d71c9e71461012d578063b2e6b9121461016a578063cdf8254b14610195578063ff99a063146101d25761007b565b806303e96fe3146100805780631af4d702146100ab5780634fd77ff3146100d45780635153e8dd146100f0575b600080fd5b34801561008c57600080fd5b5061009561020f565b6040516100a291906116ee565b60405180910390f35b3480156100b757600080fd5b506100d260048036038101906100cd9190611885565b6103cb565b005b6100ee60048036038101906100e99190611910565b610759565b005b3480156100fc57600080fd5b506101176004803603810190610112919061196c565b610cf4565b60405161012491906116ee565b60405180910390f35b34801561013957600080fd5b50610154600480360381019061014f919061196c565b610ece565b60405161016191906116ee565b60405180910390f35b34801561017657600080fd5b5061017f6110a8565b60405161018c91906119f6565b60405180910390f35b3480156101a157600080fd5b506101bc60048036038101906101b7919061196c565b6110d0565b6040516101c991906116ee565b60405180910390f35b3480156101de57600080fd5b506101f960048036038101906101f49190611a11565b6112aa565b6040516102069190611ace565b60405180910390f35b60606002805480602002602001604051908101604052809291908181526020016000905b828210156103c257838290600052602060002090600602016040518060c00160405290816000820154815260200160018201805461027090611b1f565b80601f016020809104026020016040519081016040528092919081815260200182805461029c90611b1f565b80156102e95780601f106102be576101008083540402835291602001916102e9565b820191906000526020600020905b8154815290600101906020018083116102cc57829003601f168201915b5050505050815260200160028201805461030290611b1f565b80601f016020809104026020016040519081016040528092919081815260200182805461032e90611b1f565b801561037b5780601f106103505761010080835404028352916020019161037b565b820191906000526020600020905b81548152906001019060200180831161035e57829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff16151515158152505081526020019060010190610233565b50505050905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610450576040517fdaf2766300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026040518060c0016040528060005481526020018581526020018481526020018381526020014281526020016000151581525090806001815401808255809150506001900390600052602060002090600602016000909190919091506000820151816000015560208201518160010190816104cc9190611cfc565b5060408201518160020190816104e29190611cfc565b50606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555050506003826040516105299190611e0a565b90815260200160405180910390206040518060c0016040528060005481526020018581526020018481526020018381526020014281526020016000151581525090806001815401808255809150506001900390600052602060002090600602016000909190919091506000820151816000015560208201518160010190816105b19190611cfc565b5060408201518160020190816105c79190611cfc565b50606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff021916908315150217905550505060048260405161060e9190611e0a565b90815260200160405180910390206040518060c0016040528060005481526020018581526020018481526020018381526020014281526020016000151581525090806001815401808255809150506001900390600052602060002090600602016000909190919091506000820151816000015560208201518160010190816106969190611cfc565b5060408201518160020190816106ac9190611cfc565b50606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff021916908315150217905550505060016000808282546106f59190611e50565b925050819055508260405161070a9190611e0a565b6040518091039020826040516107209190611e0a565b60405180910390207f2eb5a5afbe330c720b569c62a4c06cc1d9562eeadf2d5ffa3af175408e69b91460405160405180910390a3505050565b600060038360405161076b9190611e0a565b9081526020016040518091039020828154811061078b5761078a611e84565b5b90600052602060002090600602016040518060c0016040529081600082015481526020016001820180546107be90611b1f565b80601f01602080910402602001604051908101604052809291908181526020018280546107ea90611b1f565b80156108375780601f1061080c57610100808354040283529160200191610837565b820191906000526020600020905b81548152906001019060200180831161081a57829003601f168201915b5050505050815260200160028201805461085090611b1f565b80601f016020809104026020016040519081016040528092919081815260200182805461087c90611b1f565b80156108c95780601f1061089e576101008083540402835291602001916108c9565b820191906000526020600020905b8154815290600101906020018083116108ac57829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff161515151581525050905060008160600151905080341015610946576040517fcdcdc2a800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b34600160008282546109589190611e50565b9250508190555060018260a001901515908115158152505060006002848154811061098657610985611e84565b5b90600052602060002090600602016040518060c0016040529081600082015481526020016001820180546109b990611b1f565b80601f01602080910402602001604051908101604052809291908181526020018280546109e590611b1f565b8015610a325780601f10610a0757610100808354040283529160200191610a32565b820191906000526020600020905b815481529060010190602001808311610a1557829003601f168201915b50505050508152602001600282018054610a4b90611b1f565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7790611b1f565b8015610ac45780601f10610a9957610100808354040283529160200191610ac4565b820191906000526020600020905b815481529060010190602001808311610aa757829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff161515151581525050905060018160a00190151590811515815250506001600386604051610b219190611e0a565b90815260200160405180910390208581548110610b4157610b40611e84565b5b906000526020600020906006020160050160006101000a81548160ff021916908315150217905550600485604051610b799190611e0a565b90815260200160405180910390208481548110610b9957610b98611e84565b5b9060005260206000209060060201600080820160009055600182016000610bc09190611443565b600282016000610bd09190611443565b600382016000905560048201600090556005820160006101000a81549060ff02191690555050600585604051610c069190611e0a565b9081526020016040518091039020839080600181540180825580915050600190039060005260206000209060060201600090919091909150600082015181600001556020820151816001019081610c5d9190611cfc565b506040820151816002019081610c739190611cfc565b50606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff021916908315150217905550505084604051610cb89190611e0a565b6040518091039020847fe28e2edd34dc43f8e5cfe399e8462a1057a879b384d9195699ff890334ae08ec60405160405180910390a35050505050565b6060600482604051610d069190611e0a565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b82821015610ec357838290600052602060002090600602016040518060c001604052908160008201548152602001600182018054610d7190611b1f565b80601f0160208091040260200160405190810160405280929190818152602001828054610d9d90611b1f565b8015610dea5780601f10610dbf57610100808354040283529160200191610dea565b820191906000526020600020905b815481529060010190602001808311610dcd57829003601f168201915b50505050508152602001600282018054610e0390611b1f565b80601f0160208091040260200160405190810160405280929190818152602001828054610e2f90611b1f565b8015610e7c5780601f10610e5157610100808354040283529160200191610e7c565b820191906000526020600020905b815481529060010190602001808311610e5f57829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff16151515158152505081526020019060010190610d34565b505050509050919050565b6060600382604051610ee09190611e0a565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b8282101561109d57838290600052602060002090600602016040518060c001604052908160008201548152602001600182018054610f4b90611b1f565b80601f0160208091040260200160405190810160405280929190818152602001828054610f7790611b1f565b8015610fc45780601f10610f9957610100808354040283529160200191610fc4565b820191906000526020600020905b815481529060010190602001808311610fa757829003601f168201915b50505050508152602001600282018054610fdd90611b1f565b80601f016020809104026020016040519081016040528092919081815260200182805461100990611b1f565b80156110565780601f1061102b57610100808354040283529160200191611056565b820191906000526020600020905b81548152906001019060200180831161103957829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff16151515158152505081526020019060010190610f0e565b505050509050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60606005826040516110e29190611e0a565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b8282101561129f57838290600052602060002090600602016040518060c00160405290816000820154815260200160018201805461114d90611b1f565b80601f016020809104026020016040519081016040528092919081815260200182805461117990611b1f565b80156111c65780601f1061119b576101008083540402835291602001916111c6565b820191906000526020600020905b8154815290600101906020018083116111a957829003601f168201915b505050505081526020016002820180546111df90611b1f565b80601f016020809104026020016040519081016040528092919081815260200182805461120b90611b1f565b80156112585780601f1061122d57610100808354040283529160200191611258565b820191906000526020600020905b81548152906001019060200180831161123b57829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff16151515158152505081526020019060010190611110565b505050509050919050565b6112b2611483565b600282815481106112c6576112c5611e84565b5b90600052602060002090600602016040518060c0016040529081600082015481526020016001820180546112f990611b1f565b80601f016020809104026020016040519081016040528092919081815260200182805461132590611b1f565b80156113725780601f1061134757610100808354040283529160200191611372565b820191906000526020600020905b81548152906001019060200180831161135557829003601f168201915b5050505050815260200160028201805461138b90611b1f565b80601f01602080910402602001604051908101604052809291908181526020018280546113b790611b1f565b80156114045780601f106113d957610100808354040283529160200191611404565b820191906000526020600020905b8154815290600101906020018083116113e757829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1615151515815250509050919050565b50805461144f90611b1f565b6000825580601f106114615750611480565b601f01602090049060005260206000209081019061147f91906114bb565b5b50565b6040518060c0016040528060008152602001606081526020016060815260200160008152602001600081526020016000151581525090565b5b808211156114d45760008160009055506001016114bc565b5090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b61151781611504565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561155757808201518184015260208101905061153c565b60008484015250505050565b6000601f19601f8301169050919050565b600061157f8261151d565b6115898185611528565b9350611599818560208601611539565b6115a281611563565b840191505092915050565b60008115159050919050565b6115c2816115ad565b82525050565b600060c0830160008301516115e0600086018261150e565b50602083015184820360208601526115f88282611574565b915050604083015184820360408601526116128282611574565b9150506060830151611627606086018261150e565b50608083015161163a608086018261150e565b5060a083015161164d60a08601826115b9565b508091505092915050565b600061166483836115c8565b905092915050565b6000602082019050919050565b6000611684826114d8565b61168e81856114e3565b9350836020820285016116a0856114f4565b8060005b858110156116dc57848403895281516116bd8582611658565b94506116c88361166c565b925060208a019950506001810190506116a4565b50829750879550505050505092915050565b600060208201905081810360008301526117088184611679565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61176682611563565b810181811067ffffffffffffffff821117156117855761178461172e565b5b80604052505050565b6000611798611710565b90506117a4828261175d565b919050565b600067ffffffffffffffff8211156117c4576117c361172e565b5b6117cd82611563565b9050602081019050919050565b82818337600083830152505050565b60006117fc6117f7846117a9565b61178e565b90508281526020810184848401111561181857611817611729565b5b6118238482856117da565b509392505050565b600082601f8301126118405761183f611724565b5b81356118508482602086016117e9565b91505092915050565b61186281611504565b811461186d57600080fd5b50565b60008135905061187f81611859565b92915050565b60008060006060848603121561189e5761189d61171a565b5b600084013567ffffffffffffffff8111156118bc576118bb61171f565b5b6118c88682870161182b565b935050602084013567ffffffffffffffff8111156118e9576118e861171f565b5b6118f58682870161182b565b925050604061190686828701611870565b9150509250925092565b600080604083850312156119275761192661171a565b5b600083013567ffffffffffffffff8111156119455761194461171f565b5b6119518582860161182b565b925050602061196285828601611870565b9150509250929050565b6000602082840312156119825761198161171a565b5b600082013567ffffffffffffffff8111156119a05761199f61171f565b5b6119ac8482850161182b565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119e0826119b5565b9050919050565b6119f0816119d5565b82525050565b6000602082019050611a0b60008301846119e7565b92915050565b600060208284031215611a2757611a2661171a565b5b6000611a3584828501611870565b91505092915050565b600060c083016000830151611a56600086018261150e565b5060208301518482036020860152611a6e8282611574565b91505060408301518482036040860152611a888282611574565b9150506060830151611a9d606086018261150e565b506080830151611ab0608086018261150e565b5060a0830151611ac360a08601826115b9565b508091505092915050565b60006020820190508181036000830152611ae88184611a3e565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611b3757607f821691505b602082108103611b4a57611b49611af0565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611bb27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611b75565b611bbc8683611b75565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611bf9611bf4611bef84611504565b611bd4565b611504565b9050919050565b6000819050919050565b611c1383611bde565b611c27611c1f82611c00565b848454611b82565b825550505050565b600090565b611c3c611c2f565b611c47818484611c0a565b505050565b5b81811015611c6b57611c60600082611c34565b600181019050611c4d565b5050565b601f821115611cb057611c8181611b50565b611c8a84611b65565b81016020851015611c99578190505b611cad611ca585611b65565b830182611c4c565b50505b505050565b600082821c905092915050565b6000611cd360001984600802611cb5565b1980831691505092915050565b6000611cec8383611cc2565b9150826002028217905092915050565b611d058261151d565b67ffffffffffffffff811115611d1e57611d1d61172e565b5b611d288254611b1f565b611d33828285611c6f565b600060209050601f831160018114611d665760008415611d54578287015190505b611d5e8582611ce0565b865550611dc6565b601f198416611d7486611b50565b60005b82811015611d9c57848901518255600182019150602085019450602081019050611d77565b86831015611db95784890151611db5601f891682611cc2565b8355505b6001600288020188555050505b505050505050565b600081905092915050565b6000611de48261151d565b611dee8185611dce565b9350611dfe818560208601611539565b80840191505092915050565b6000611e168284611dd9565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e5b82611504565b9150611e6683611504565b9250828201905080821115611e7e57611e7d611e21565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea264697066735822122036f7f3a590aaa8a47ad6ddd603e8cf62e268d96721a29b48fee04c340faddb4064736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 9,
        "contract": "contracts/Ledger.sol:Ledger",
        "label": "s_ticketCount",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 11,
        "contract": "contracts/Ledger.sol:Ledger",
        "label": "s_ledgerBalance",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 28,
        "contract": "contracts/Ledger.sol:Ledger",
        "label": "s_tickets",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_struct(Ticket)24_storage)dyn_storage"
      },
      {
        "astId": 34,
        "contract": "contracts/Ledger.sol:Ledger",
        "label": "s_vehicleTickets",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_string_memory_ptr,t_array(t_struct(Ticket)24_storage)dyn_storage)"
      },
      {
        "astId": 40,
        "contract": "contracts/Ledger.sol:Ledger",
        "label": "s_vehicleUpaidTickets",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_string_memory_ptr,t_array(t_struct(Ticket)24_storage)dyn_storage)"
      },
      {
        "astId": 46,
        "contract": "contracts/Ledger.sol:Ledger",
        "label": "s_vehiclePaidTickets",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_string_memory_ptr,t_array(t_struct(Ticket)24_storage)dyn_storage)"
      }
    ],
    "types": {
      "t_array(t_struct(Ticket)24_storage)dyn_storage": {
        "base": "t_struct(Ticket)24_storage",
        "encoding": "dynamic_array",
        "label": "struct Ledger.Ticket[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_string_memory_ptr,t_array(t_struct(Ticket)24_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct Ledger.Ticket[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(Ticket)24_storage)dyn_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Ticket)24_storage": {
        "encoding": "inplace",
        "label": "struct Ledger.Ticket",
        "members": [
          {
            "astId": 13,
            "contract": "contracts/Ledger.sol:Ledger",
            "label": "ticketNumber",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 15,
            "contract": "contracts/Ledger.sol:Ledger",
            "label": "location",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 17,
            "contract": "contracts/Ledger.sol:Ledger",
            "label": "carNumberPlate",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 19,
            "contract": "contracts/Ledger.sol:Ledger",
            "label": "price",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 21,
            "contract": "contracts/Ledger.sol:Ledger",
            "label": "issuedAt",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 23,
            "contract": "contracts/Ledger.sol:Ledger",
            "label": "isPaid",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}