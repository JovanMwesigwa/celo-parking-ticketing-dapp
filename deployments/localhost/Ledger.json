{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "getAdminAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllTickets",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "location",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "carNumberPlate",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "issuedAt",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isPaid",
              "type": "bool"
            }
          ],
          "internalType": "struct Ledger.Ticket[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x79dbe31b400a14480dfe57506653d82a2aaff9b59dd6b14fe44a5f42d3e1827f",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "375052",
    "logsBloom": "0x
    "blockHash": "0xcd9c77ec4e7d59f748437548379d5635f74066ab595d01a52d39c2e776dc1634",
    "transactionHash": "0x79dbe31b400a14480dfe57506653d82a2aaff9b59dd6b14fe44a5f42d3e1827f",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "375052",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "7a51e0b3ea43ac9c1ccc6688f3109d81",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getAdminAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllTickets\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"carNumberPlate\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issuedAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPaid\",\"type\":\"bool\"}],\"internalType\":\"struct Ledger.Ticket[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ledger.sol\":\"Ledger\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ledger.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.9;\\r\\n\\r\\n// Uncomment this line to use console.log\\r\\n// import \\\"hardhat/console.sol\\\";\\r\\n/*\\r\\n    1. We need an admin address to issue a new ticket\\r\\n    2. Ticket object should have - {\\r\\n        price,\\r\\n        date created,\\r\\n        car number plate,\\r\\n        is paid -- (bool)\\r\\n    }\\r\\n    3. Anyone can pay for the ticket on the owner's behalf\\r\\n\\r\\n    NB: The car's license plate is very important because we may need to query \\r\\n        its details or loop through and filter between paid and unpaid tickets (using the license plates)\\r\\n */\\r\\n\\r\\ncontract Ledger {\\r\\n    // Set the admin default address\\r\\n    address private i_admin;\\r\\n\\r\\n    // Create the ticket issuing object\\r\\n    struct Ticket {\\r\\n        string location;\\r\\n        string carNumberPlate;\\r\\n        uint256 price;\\r\\n        uint256 issuedAt;\\r\\n        bool isPaid;\\r\\n    }\\r\\n\\r\\n    // All Tickets array\\r\\n    Ticket[] private tickets;\\r\\n\\r\\n    // Constructor\\r\\n    constructor() {\\r\\n        i_admin = msg.sender;\\r\\n    }\\r\\n\\r\\n    // View functions\\r\\n    function getAdminAddress() public view returns (address) {\\r\\n        return i_admin;\\r\\n    }\\r\\n\\r\\n    // get all tickets obj\\r\\n    function getAllTickets() public view returns (Ticket[] memory) {\\r\\n        return tickets;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x57a4abeb8b70a8d6f4b2870ab416f083e285ce7fc30c7399984342717211fc24\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610569806100606000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806303e96fe31461003b578063b2e6b91214610059575b600080fd5b610043610077565b6040516100509190610455565b60405180910390f35b610061610229565b60405161006e91906104b8565b60405180910390f35b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561022057838290600052602060002090600502016040518060a00160405290816000820180546100ce90610502565b80601f01602080910402602001604051908101604052809291908181526020018280546100fa90610502565b80156101475780601f1061011c57610100808354040283529160200191610147565b820191906000526020600020905b81548152906001019060200180831161012a57829003601f168201915b5050505050815260200160018201805461016090610502565b80601f016020809104026020016040519081016040528092919081815260200182805461018c90610502565b80156101d95780601f106101ae576101008083540402835291602001916101d9565b820191906000526020600020905b8154815290600101906020018083116101bc57829003601f168201915b5050505050815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff1615151515815250508152602001906001019061009b565b50505050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156102b857808201518184015260208101905061029d565b60008484015250505050565b6000601f19601f8301169050919050565b60006102e08261027e565b6102ea8185610289565b93506102fa81856020860161029a565b610303816102c4565b840191505092915050565b6000819050919050565b6103218161030e565b82525050565b60008115159050919050565b61033c81610327565b82525050565b600060a083016000830151848203600086015261035f82826102d5565b9150506020830151848203602086015261037982826102d5565b915050604083015161038e6040860182610318565b5060608301516103a16060860182610318565b5060808301516103b46080860182610333565b508091505092915050565b60006103cb8383610342565b905092915050565b6000602082019050919050565b60006103eb82610252565b6103f5818561025d565b9350836020820285016104078561026e565b8060005b85811015610443578484038952815161042485826103bf565b945061042f836103d3565b925060208a0199505060018101905061040b565b50829750879550505050505092915050565b6000602082019050818103600083015261046f81846103e0565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104a282610477565b9050919050565b6104b281610497565b82525050565b60006020820190506104cd60008301846104a9565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061051a57607f821691505b60208210810361052d5761052c6104d3565b5b5091905056fea2646970667358221220682f1df45f5a3ac65ff9cdcd656428676f60eb43d541536bfdfdaa74d4a46c2164736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c806303e96fe31461003b578063b2e6b91214610059575b600080fd5b610043610077565b6040516100509190610455565b60405180910390f35b610061610229565b60405161006e91906104b8565b60405180910390f35b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561022057838290600052602060002090600502016040518060a00160405290816000820180546100ce90610502565b80601f01602080910402602001604051908101604052809291908181526020018280546100fa90610502565b80156101475780601f1061011c57610100808354040283529160200191610147565b820191906000526020600020905b81548152906001019060200180831161012a57829003601f168201915b5050505050815260200160018201805461016090610502565b80601f016020809104026020016040519081016040528092919081815260200182805461018c90610502565b80156101d95780601f106101ae576101008083540402835291602001916101d9565b820191906000526020600020905b8154815290600101906020018083116101bc57829003601f168201915b5050505050815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff1615151515815250508152602001906001019061009b565b50505050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156102b857808201518184015260208101905061029d565b60008484015250505050565b6000601f19601f8301169050919050565b60006102e08261027e565b6102ea8185610289565b93506102fa81856020860161029a565b610303816102c4565b840191505092915050565b6000819050919050565b6103218161030e565b82525050565b60008115159050919050565b61033c81610327565b82525050565b600060a083016000830151848203600086015261035f82826102d5565b9150506020830151848203602086015261037982826102d5565b915050604083015161038e6040860182610318565b5060608301516103a16060860182610318565b5060808301516103b46080860182610333565b508091505092915050565b60006103cb8383610342565b905092915050565b6000602082019050919050565b60006103eb82610252565b6103f5818561025d565b9350836020820285016104078561026e565b8060005b85811015610443578484038952815161042485826103bf565b945061042f836103d3565b925060208a0199505060018101905061040b565b50829750879550505050505092915050565b6000602082019050818103600083015261046f81846103e0565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104a282610477565b9050919050565b6104b281610497565b82525050565b60006020820190506104cd60008301846104a9565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061051a57607f821691505b60208210810361052d5761052c6104d3565b5b5091905056fea2646970667358221220682f1df45f5a3ac65ff9cdcd656428676f60eb43d541536bfdfdaa74d4a46c2164736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3,
        "contract": "contracts/Ledger.sol:Ledger",
        "label": "i_admin",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 18,
        "contract": "contracts/Ledger.sol:Ledger",
        "label": "tickets",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(Ticket)14_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Ticket)14_storage)dyn_storage": {
        "base": "t_struct(Ticket)14_storage",
        "encoding": "dynamic_array",
        "label": "struct Ledger.Ticket[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Ticket)14_storage": {
        "encoding": "inplace",
        "label": "struct Ledger.Ticket",
        "members": [
          {
            "astId": 5,
            "contract": "contracts/Ledger.sol:Ledger",
            "label": "location",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 7,
            "contract": "contracts/Ledger.sol:Ledger",
            "label": "carNumberPlate",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 9,
            "contract": "contracts/Ledger.sol:Ledger",
            "label": "price",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 11,
            "contract": "contracts/Ledger.sol:Ledger",
            "label": "issuedAt",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 13,
            "contract": "contracts/Ledger.sol:Ledger",
            "label": "isPaid",
            "offset": 0,
            "slot": "4",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}